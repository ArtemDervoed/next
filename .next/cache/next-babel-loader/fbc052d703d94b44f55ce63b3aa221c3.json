{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/SphereSlider/SphereSlider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl'; // import TRYGalien from './TRYGalien.woff2';\n\nvar SphereSlider =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SphereSlider, _React$PureComponent);\n\n  function SphereSlider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SphereSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SphereSlider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (e) {\n      console.log(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (e) {\n      _this.mouse.x = e.clientX / window.innerWidth * 2 - 1;\n      _this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function () {\n      requestAnimationFrame(_this.animate);\n    });\n\n    return _this;\n  }\n\n  _createClass(SphereSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mouse = {\n        x: 0,\n        y: 0\n      };\n      this.PIXI = require('pixi.js');\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.app = new this.PIXI.Application({\n        width: this.width,\n        height: this.height,\n        transparent: true,\n        autoResize: true,\n        resizeTo: window,\n        resolution: 1,\n        // forceFXAA: true,\n        antialias: true\n      });\n      this.canvas.appendChild(this.app.view);\n      window.addEventListener('mousemove', this.handleMouseMove);\n      window.addEventListener('keydown', this.handleKeyDown);\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        ref: function ref(node) {\n          _this2.canvas = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SphereSlider;\n}(React.PureComponent);\n\nexport { SphereSlider as default };","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/SphereSlider.js"],"names":["textFragment","textVertex","SphereSlider","e","console","log","mouse","x","clientX","window","innerWidth","y","clientY","innerHeight","requestAnimationFrame","animate","PIXI","require","width","height","app","Application","transparent","autoResize","resizeTo","resolution","antialias","canvas","appendChild","view","addEventListener","handleMouseMove","handleKeyDown","node","React","PureComponent"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;IAEqBC,Y;;;;;;;;;;;;;;;;;;oEA2BH,UAACC,CAAD,EAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAED,K;;sEAEiB,UAACA,CAAD,EAAO;AACvB,YAAKG,KAAL,CAAWC,CAAX,GAAiBJ,CAAC,CAACK,OAAF,GAAYC,MAAM,CAACC,UAArB,GAAoC,CAApC,GAAwC,CAAvD;AACD,YAAKJ,KAAL,CAAWK,CAAX,GAAe,EAAIR,CAAC,CAACS,OAAF,GAAYH,MAAM,CAACI,WAAvB,IAAuC,CAAvC,GAA2C,CAA1D;AACA,K;;8DAES,YAAM;AACdC,MAAAA,qBAAqB,CAAE,MAAKC,OAAP,CAArB;AACD,K;;;;;;;wCAtCmB;AAClB,WAAKT,KAAL,GAAa;AACXC,QAAAA,CAAC,EAAE,CADQ;AAEXI,QAAAA,CAAC,EAAE;AAFQ,OAAb;AAIA,WAAKK,IAAL,GAAYC,OAAO,CAAC,SAAD,CAAnB;AACA,WAAKC,KAAL,GAAaT,MAAM,CAACC,UAApB;AACA,WAAKS,MAAL,GAAcV,MAAM,CAACI,WAArB;AACA,WAAKO,GAAL,GAAW,IAAI,KAAKJ,IAAL,CAAUK,WAAd,CAA0B;AACnCH,QAAAA,KAAK,EAAE,KAAKA,KADuB;AAEnCC,QAAAA,MAAM,EAAE,KAAKA,MAFsB;AAGnCG,QAAAA,WAAW,EAAE,IAHsB;AAInCC,QAAAA,UAAU,EAAE,IAJuB;AAKnCC,QAAAA,QAAQ,EAAEf,MALyB;AAMnCgB,QAAAA,UAAU,EAAE,CANuB;AAOnC;AACAC,QAAAA,SAAS,EAAE;AARwB,OAA1B,CAAX;AAWA,WAAKC,MAAL,CAAYC,WAAZ,CAAwB,KAAKR,GAAL,CAASS,IAAjC;AAEApB,MAAAA,MAAM,CAACqB,gBAAP,CAAwB,WAAxB,EAAqC,KAAKC,eAA1C;AACAtB,MAAAA,MAAM,CAACqB,gBAAP,CAAwB,SAAxB,EAAmC,KAAKE,aAAxC;AACA,WAAKjB,OAAL;AACD;;;6BAgBQ;AAAA;;AACP,aACE;AAAK,QAAA,GAAG,EAAE,aAACkB,IAAD,EAAU;AAAE,UAAA,MAAI,CAACN,MAAL,GAAcM,IAAd;AAAmB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EA7CuCC,KAAK,CAACC,a;;SAA3BjC,Y","sourcesContent":["import textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class SphereSlider extends React.PureComponent {\n  componentDidMount() {\n    this.mouse = {\n      x: 0,\n      y: 0,\n    }\n    this.PIXI = require('pixi.js');\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.app = new this.PIXI.Application({\n      width: this.width,\n      height: this.height,\n      transparent: true,\n      autoResize: true,\n      resizeTo: window,\n      resolution: 1,\n      // forceFXAA: true,\n      antialias: true,\n    });\n\n    this.canvas.appendChild(this.app.view);\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.animate();\n  }\n\n  handleKeyDown = (e) => {\n    console.log(e);\n    \n  }\n\n  handleMouseMove = (e) => {\n    this.mouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t  this.mouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  animate = () => {\n    requestAnimationFrame( this.animate );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}