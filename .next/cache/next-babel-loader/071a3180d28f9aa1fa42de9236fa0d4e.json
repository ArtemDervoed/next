{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { Expo, TweenMax } from 'gsap';\nimport * as PIXI from \"pixi.js\";\nimport dsmap from 'images/ds_map.png';\nexport default class ImageBehaviour {\n  constructor(sprite, container) {\n    _defineProperty(this, \"addFilter\", filters => {\n      if (filters.length === 0) return;\n      this.container.filters = [];\n      filters.forEach(item => {\n        if (item === 'desaturate') {\n          const colorMatrix = new PIXI.filters.ColorMatrixFilter();\n          this.container.filters.push(colorMatrix);\n          colorMatrix.desaturate();\n        }\n      });\n    });\n\n    _defineProperty(this, \"addCustumFilter\", filter => {\n      this.sprite.filters = [filter];\n    });\n\n    _defineProperty(this, \"hideFilter\", (filterName, duration) => {\n      if (this.container.filtersTemp.length === 0 || !this.container.filters) return;\n      TweenMax.to(this.container.filters[0].matrix, duration, this.defaultMatrix);\n    });\n\n    _defineProperty(this, \"removeFilter\", () => {\n      this.container.filters = [];\n    });\n\n    _defineProperty(this, \"hide\", (duration, callback) => {\n      TweenMax.to(this.sprite, duration, {\n        alpha: 0,\n        ease: Expo.easeInOut,\n        onComplete: callback\n      });\n    });\n\n    _defineProperty(this, \"show\", (duration, callback) => {\n      TweenMax.to(this.sprite, duration, {\n        alpha: 1,\n        ease: Expo.easeInOut,\n        onComplete: callback\n      });\n    });\n\n    _defineProperty(this, \"showWithDisplacement\", (duration, callback) => {\n      this.sprite.filters = [this.displacementFilter];\n      TweenMax.to(this.displacementFilter.scale, duration, {\n        x: 1,\n        y: 1,\n        ease: Expo.easeInOut\n      });\n      TweenMax.to(this.sprite, duration * 0.9, {\n        alpha: 1,\n        ease: Expo.easeInOut,\n        onComplete: () => {\n          if (callback) {\n            callback();\n          }\n\n          this.container.removeChild(this.displacementSprite);\n          this.container.filters = null;\n        }\n      });\n    });\n\n    _defineProperty(this, \"hideWithDisplacement\", (duration, callback, isFrom = false) => {\n      this.sprite.filters = [this.displacementFilter];\n\n      if (isFrom) {\n        this.displacementFilter.scale.x = 1;\n        this.displacementFilter.scale.y = 1;\n      }\n\n      TweenMax.to(this.displacementFilter.scale, duration, {\n        x: -5000,\n        y: -5000,\n        ease: Expo.easeInOut,\n        onComplete: () => {\n          if (callback) {\n            callback();\n          }\n\n          this.container.filters = null;\n        }\n      });\n      TweenMax.to(this.sprite, duration, {\n        alpha: 0,\n        ease: Expo.easeInOut,\n        delay: duration * 0.1\n      });\n    });\n\n    this.sprite = sprite;\n    this.container = container;\n\n    if (container.filtersTemp) {\n      this.addFilter(container.filtersTemp);\n    }\n\n    this.displacementSprite = new PIXI.Sprite.from(dsmap); // eslint-disable-line\n\n    this.displacementSprite.width = this.sprite.width;\n    this.displacementSprite.height = this.sprite.height;\n    this.displacementFilter = new PIXI.filters.DisplacementFilter(this.displacementSprite);\n    this.displacementSprite.texture.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n    this.displacementSprite.anchor.set(0.5);\n    this.displacementFilter.rotation = Math.PI / 8;\n    this.defaultMatrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n  }\n\n}","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/ImageBehaviour.js"],"names":["Expo","TweenMax","PIXI","dsmap","ImageBehaviour","constructor","sprite","container","filters","length","forEach","item","colorMatrix","ColorMatrixFilter","push","desaturate","filter","filterName","duration","filtersTemp","to","matrix","defaultMatrix","callback","alpha","ease","easeInOut","onComplete","displacementFilter","scale","x","y","removeChild","displacementSprite","isFrom","delay","addFilter","Sprite","from","width","height","DisplacementFilter","texture","baseTexture","wrapMode","WRAP_MODES","REPEAT","anchor","set","rotation","Math","PI"],"mappings":"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","sourcesContent":["import { Expo, TweenMax } from 'gsap';\nimport * as PIXI from \"pixi.js\";\n\nimport dsmap from 'images/ds_map.png';\n\nexport default class ImageBehaviour {\n  constructor(sprite, container) {\n    this.sprite = sprite;\n    this.container = container;\n    if (container.filtersTemp) {\n      this.addFilter(container.filtersTemp);\n    }\n    this.displacementSprite = new PIXI.Sprite.from(dsmap); // eslint-disable-line\n    this.displacementSprite.width = this.sprite.width;\n    this.displacementSprite.height = this.sprite.height;\n    this.displacementFilter = new PIXI.filters.DisplacementFilter(this.displacementSprite);\n    this.displacementSprite.texture.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n    this.displacementSprite.anchor.set(0.5);\n    this.displacementFilter.rotation = Math.PI / 8;\n    this.defaultMatrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n  }\n\n  addFilter = (filters) => {\n    if (filters.length === 0) return;\n    this.container.filters = [];\n    filters.forEach(item => {\n      if (item === 'desaturate') {\n        const colorMatrix = new PIXI.filters.ColorMatrixFilter();\n        this.container.filters.push(colorMatrix);\n        colorMatrix.desaturate();\n      }\n    });\n  };\n\n  addCustumFilter = (filter) => {\n\n    this.sprite.filters = [filter];\n  }\n\n  hideFilter = (filterName, duration) => {\n    if (this.container.filtersTemp.length === 0 || !this.container.filters) return;\n    TweenMax.to(this.container.filters[0].matrix, duration, this.defaultMatrix);};\n\n  removeFilter = () => {\n    this.container.filters = [];\n  };\n\n  hide = (duration, callback) => {\n    TweenMax.to(\n      this.sprite,\n      duration,\n      {\n        alpha: 0,\n        ease: Expo.easeInOut,\n        onComplete: callback,\n      },\n    );\n  };\n\n  show = (duration, callback) => {\n    TweenMax.to(\n      this.sprite,\n      duration,\n      {\n        alpha: 1,\n        ease: Expo.easeInOut,\n        onComplete: callback,\n      },\n    );\n  };\n\n  showWithDisplacement = (duration, callback) => {\n    this.sprite.filters = [this.displacementFilter];\n    TweenMax.to(\n      this.displacementFilter.scale,\n      duration,\n      {\n        x: 1,\n        y: 1,\n        ease: Expo.easeInOut,\n      });\n    TweenMax.to(\n      this.sprite,\n      duration * 0.9,\n      {\n        alpha: 1,\n        ease: Expo.easeInOut,\n        onComplete: () => {\n          if (callback) {\n            callback();\n          }\n          this.container.removeChild(this.displacementSprite);\n          this.container.filters = null;\n        },\n      },\n    );\n  };\n\n  hideWithDisplacement = (duration, callback, isFrom = false) => {\n    this.sprite.filters = [this.displacementFilter];\n    if (isFrom) {\n      this.displacementFilter.scale.x = 1;\n      this.displacementFilter.scale.y = 1;\n    }\n    TweenMax.to(\n      this.displacementFilter.scale,\n      duration,\n      {\n        x: -5000,\n        y: -5000,\n        ease: Expo.easeInOut,\n        onComplete: () => {\n          if (callback) {\n            callback();\n          }\n          this.container.filters = null;\n        },\n      });\n    TweenMax.to(\n      this.sprite,\n      duration,\n      {\n        alpha: 0,\n        ease: Expo.easeInOut,\n        delay: duration * 0.1,\n      },\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}