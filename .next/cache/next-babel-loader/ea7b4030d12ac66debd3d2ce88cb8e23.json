{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/SphereSlider/SphereSlider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport * as PIXI from 'pixi.js';\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl'; // import TRYGalien from './TRYGalien.woff2';\n\nvar SphereSlider =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SphereSlider, _React$PureComponent);\n\n  function SphereSlider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SphereSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SphereSlider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function () {\n      _this.material.needsUpdate = true;\n      requestAnimationFrame(_this.animate); // this.cube.rotation.x += 0.01;\n      // this.cube.rotation.y += 0.01;\n\n      _this.renderer.render(_this.scene, _this.camera);\n    });\n\n    return _this;\n  }\n\n  _createClass(SphereSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var app = new PIXI.Application({\n        backgroundColor: 0x1099bb\n      });\n      this.canvas.appendChild(app.view);\n      var basicText = new PIXI.Text('Basic text in pixi');\n      basicText.x = 50;\n      basicText.y = 100;\n      app.stage.addChild(basicText);\n      var style = new PIXI.TextStyle({\n        fontFamily: 'Arial',\n        fontSize: 36,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n        fill: ['#ffffff', '#00ff99'],\n        // gradient\n        stroke: '#4a1850',\n        strokeThickness: 5,\n        dropShadow: true,\n        dropShadowColor: '#000000',\n        dropShadowBlur: 4,\n        dropShadowAngle: Math.PI / 6,\n        dropShadowDistance: 6,\n        wordWrap: true,\n        wordWrapWidth: 440\n      });\n      var richText = new PIXI.Text('Rich text with a lot of options and across multiple lines', style);\n      richText.x = 50;\n      richText.y = 250;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        ref: function ref(node) {\n          _this2.canvas = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SphereSlider;\n}(React.PureComponent);\n\nexport { SphereSlider as default };","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/SphereSlider.js"],"names":["PIXI","textFragment","textVertex","SphereSlider","material","needsUpdate","requestAnimationFrame","animate","renderer","render","scene","camera","app","Application","backgroundColor","canvas","appendChild","view","basicText","Text","x","y","stage","addChild","style","TextStyle","fontFamily","fontSize","fontStyle","fontWeight","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","Math","PI","dropShadowDistance","wordWrap","wordWrapWidth","richText","node","React","PureComponent"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,SAAtB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;IAEqBC,Y;;;;;;;;;;;;;;;;;;8DAkCT,YAAM;AACd,YAAKC,QAAL,CAAcC,WAAd,GAA4B,IAA5B;AACAC,MAAAA,qBAAqB,CAAE,MAAKC,OAAP,CAArB,CAFc,CAGd;AACF;;AACE,YAAKC,QAAL,CAAcC,MAAd,CAAsB,MAAKC,KAA3B,EAAkC,MAAKC,MAAvC;AACD,K;;;;;;;wCAvCmB;AAClB,UAAMC,GAAG,GAAG,IAAIZ,IAAI,CAACa,WAAT,CAAqB;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAArB,CAAZ;AACA,WAAKC,MAAL,CAAYC,WAAZ,CAAwBJ,GAAG,CAACK,IAA5B;AAEA,UAAMC,SAAS,GAAG,IAAIlB,IAAI,CAACmB,IAAT,CAAc,oBAAd,CAAlB;AACAD,MAAAA,SAAS,CAACE,CAAV,GAAc,EAAd;AACAF,MAAAA,SAAS,CAACG,CAAV,GAAc,GAAd;AAEAT,MAAAA,GAAG,CAACU,KAAJ,CAAUC,QAAV,CAAmBL,SAAnB;AAEA,UAAMM,KAAK,GAAG,IAAIxB,IAAI,CAACyB,SAAT,CAAmB;AAC7BC,QAAAA,UAAU,EAAE,OADiB;AAE7BC,QAAAA,QAAQ,EAAE,EAFmB;AAG7BC,QAAAA,SAAS,EAAE,QAHkB;AAI7BC,QAAAA,UAAU,EAAE,MAJiB;AAK7BC,QAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,CALuB;AAKC;AAC9BC,QAAAA,MAAM,EAAE,SANqB;AAO7BC,QAAAA,eAAe,EAAE,CAPY;AAQ7BC,QAAAA,UAAU,EAAE,IARiB;AAS7BC,QAAAA,eAAe,EAAE,SATY;AAU7BC,QAAAA,cAAc,EAAE,CAVa;AAW7BC,QAAAA,eAAe,EAAEC,IAAI,CAACC,EAAL,GAAU,CAXE;AAY7BC,QAAAA,kBAAkB,EAAE,CAZS;AAa7BC,QAAAA,QAAQ,EAAE,IAbmB;AAc7BC,QAAAA,aAAa,EAAE;AAdc,OAAnB,CAAd;AAiBA,UAAMC,QAAQ,GAAG,IAAI1C,IAAI,CAACmB,IAAT,CAAc,2DAAd,EAA2EK,KAA3E,CAAjB;AACAkB,MAAAA,QAAQ,CAACtB,CAAT,GAAa,EAAb;AACAsB,MAAAA,QAAQ,CAACrB,CAAT,GAAa,GAAb;AAED;;;6BAUQ;AAAA;;AACP,aACE;AAAK,QAAA,GAAG,EAAE,aAACsB,IAAD,EAAU;AAAE,UAAA,MAAI,CAAC5B,MAAL,GAAc4B,IAAd;AAAmB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EA9CuCC,KAAK,CAACC,a;;SAA3B1C,Y","sourcesContent":["import * as PIXI from 'pixi.js';\nimport textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class SphereSlider extends React.PureComponent {\n  componentDidMount() {\n    const app = new PIXI.Application({ backgroundColor: 0x1099bb });\n    this.canvas.appendChild(app.view);\n\n    const basicText = new PIXI.Text('Basic text in pixi');\n    basicText.x = 50;\n    basicText.y = 100;\n\n    app.stage.addChild(basicText);\n\n    const style = new PIXI.TextStyle({\n        fontFamily: 'Arial',\n        fontSize: 36,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n        fill: ['#ffffff', '#00ff99'], // gradient\n        stroke: '#4a1850',\n        strokeThickness: 5,\n        dropShadow: true,\n        dropShadowColor: '#000000',\n        dropShadowBlur: 4,\n        dropShadowAngle: Math.PI / 6,\n        dropShadowDistance: 6,\n        wordWrap: true,\n        wordWrapWidth: 440,\n    });\n\n    const richText = new PIXI.Text('Rich text with a lot of options and across multiple lines', style);\n    richText.x = 50;\n    richText.y = 250;\n\n  }\n\n  animate = () => {\n    this.material.needsUpdate = true;\n    requestAnimationFrame( this.animate );\n    // this.cube.rotation.x += 0.01;\n\t\t// this.cube.rotation.y += 0.01;\n    this.renderer.render( this.scene, this.camera );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}