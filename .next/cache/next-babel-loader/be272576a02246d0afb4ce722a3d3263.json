{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/SphereSlider/SphereSlider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport * as THREE from 'three';\n\nvar SphereSlider =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SphereSlider, _React$PureComponent);\n\n  function SphereSlider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SphereSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SphereSlider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function () {\n      requestAnimationFrame(_this.animate);\n\n      _this.renderer.render(_this.scene, _this.camera);\n    });\n\n    return _this;\n  }\n\n  _createClass(SphereSlider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(THREE);\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.geometry = new THREE.BoxGeometry(1, 1, 1);\n      this.material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      this.cube = new THREE.Mesh(this.geometry, this.material);\n      this.scene.add(this.cube);\n      this.camera.position.z = 5;\n      this.canvas.appendChild(this.renderer.domElement);\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        ref: function ref(node) {\n          _this2.canvas = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SphereSlider;\n}(React.PureComponent);\n\nexport { SphereSlider as default };","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/SphereSlider.js"],"names":["THREE","SphereSlider","requestAnimationFrame","animate","renderer","render","scene","camera","console","log","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","setSize","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","canvas","appendChild","domElement","node","React","PureComponent"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IAEqBC,Y;;;;;;;;;;;;;;;;;;8DAoBT,YAAM;AACdC,MAAAA,qBAAqB,CAAE,MAAKC,OAAP,CAArB;;AACA,YAAKC,QAAL,CAAcC,MAAd,CAAsB,MAAKC,KAA3B,EAAkC,MAAKC,MAAvC;AACD,K;;;;;;;wCAtBmB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,WAAKM,KAAL,GAAa,IAAIN,KAAK,CAACU,KAAV,EAAb;AACA,WAAKH,MAAL,GAAc,IAAIP,KAAK,CAACW,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,GAAzE,EAA8E,IAA9E,CAAd;AAEA,WAAKV,QAAL,GAAgB,IAAIJ,KAAK,CAACe,aAAV,EAAhB;AACA,WAAKX,QAAL,CAAcY,OAAd,CAAuBJ,MAAM,CAACC,UAA9B,EAA0CD,MAAM,CAACE,WAAjD;AAEA,WAAKG,QAAL,GAAgB,IAAIjB,KAAK,CAACkB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAhB;AACA,WAAKC,QAAL,GAAgB,IAAInB,KAAK,CAACoB,iBAAV,CAA6B;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA7B,CAAhB;AACA,WAAKC,IAAL,GAAY,IAAItB,KAAK,CAACuB,IAAV,CAAgB,KAAKN,QAArB,EAA+B,KAAKE,QAApC,CAAZ;AACA,WAAKb,KAAL,CAAWkB,GAAX,CAAe,KAAKF,IAApB;AAEA,WAAKf,MAAL,CAAYkB,QAAZ,CAAqBC,CAArB,GAAyB,CAAzB;AAEA,WAAKC,MAAL,CAAYC,WAAZ,CAAyB,KAAKxB,QAAL,CAAcyB,UAAvC;AACA,WAAK1B,OAAL;AACD;;;6BAOQ;AAAA;;AACP,aACE;AAAK,QAAA,GAAG,EAAE,aAAC2B,IAAD,EAAU;AAAE,UAAA,MAAI,CAACH,MAAL,GAAcG,IAAd;AAAmB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EA7BuCC,KAAK,CAACC,a;;SAA3B/B,Y","sourcesContent":["import * as THREE from 'three';\n\nexport default class SphereSlider extends React.PureComponent {\n  componentDidMount() {\n    console.log(THREE);\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n    \n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n    this.geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    this.material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n    this.cube = new THREE.Mesh( this.geometry, this.material );\n    this.scene.add(this.cube);\n\n    this.camera.position.z = 5;\n\n    this.canvas.appendChild( this.renderer.domElement );\n    this.animate();\n  }\n\n  animate = () => {\n    requestAnimationFrame( this.animate );\n    this.renderer.render( this.scene, this.camera );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}