{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport * as PIXI from 'pixi.js';\nimport { Expo, TweenMax } from 'gsap';\n\nvar Mask =\n/*#__PURE__*/\nfunction (_PIXI$Graphics) {\n  _inherits(Mask, _PIXI$Graphics);\n\n  function Mask(element, params) {\n    var _this;\n\n    _classCallCheck(this, Mask);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mask).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"setAngle\", function (newAngle) {\n      _this.rotationAngle += newAngle; // * (180 / Math.PI);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSize\", function (widthNew, heightNew) {\n      _this.params.width = widthNew;\n      _this.params.height = heightNew;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPosition\", function (x, y) {\n      _this.params.x = x;\n      _this.params.y = y;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calcRotation\", function (x, y, angle) {\n      var cos = Math.cos(angle);\n      var sin = Math.sin(angle);\n      var nx = x * cos - y * sin;\n      var ny = y * cos + x * sin;\n      return {\n        x: nx,\n        y: ny\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMask\", function () {\n      var _this$params = _this.params,\n          x = _this$params.x,\n          y = _this$params.y,\n          width = _this$params.width,\n          height = _this$params.height,\n          anchorX = _this$params.anchorX,\n          anchorY = _this$params.anchorY; // eslint-disable-line\n\n      var nx = x - width * anchorX;\n      var ny = y - height * anchorY;\n\n      _this.clear();\n\n      _this.beginFill(0xff0000);\n\n      var v0 = _this.calcRotation(nx, ny, _this.rotationAngle);\n\n      _this.moveTo(v0.x, v0.y);\n\n      var v1 = _this.calcRotation(nx + width, ny, _this.rotationAngle);\n\n      _this.lineTo(v1.x, v1.y);\n\n      var v2 = _this.calcRotation(nx + width, ny + height, _this.rotationAngle);\n\n      _this.lineTo(v2.x, v2.y);\n\n      var v3 = _this.calcRotation(nx, ny + height, _this.rotationAngle);\n\n      _this.lineTo(v3.x, v3.y, _this.rotationAngle);\n\n      _this.lineTo(v0.x, v0.y);\n\n      _this.endFill();\n\n      _this.lineStyle(0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSizeMaskWithAnimation\", function (newWidth, newHeight, duration) {\n      TweenMax.to(_this.params, duration, {\n        width: newWidth,\n        height: newHeight,\n        ease: Expo.easeInOut,\n        onUpdate: _this.animateMask\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animateMask\", function () {\n      _this.renderMask();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeMask\", function () {\n      _this.elm.mask = null;\n    });\n\n    _this.elm = element;\n    _this.params = params;\n    _this.rotationAngle = 0; // this.elm.mask = this;\n\n    return _this;\n  }\n\n  return Mask;\n}(PIXI.Graphics);\n\nexport { Mask as default };","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/Mask.js"],"names":["PIXI","Expo","TweenMax","Mask","element","params","newAngle","rotationAngle","widthNew","heightNew","width","height","x","y","angle","cos","Math","sin","nx","ny","anchorX","anchorY","clear","beginFill","v0","calcRotation","moveTo","v1","lineTo","v2","v3","endFill","lineStyle","newWidth","newHeight","duration","to","ease","easeInOut","onUpdate","animateMask","renderMask","elm","mask","Graphics"],"mappings":"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","sourcesContent":["import * as PIXI from 'pixi.js';\nimport { Expo, TweenMax } from 'gsap';\n\nexport default class Mask extends PIXI.Graphics {\n  constructor(element, params) {\n    super();\n    this.elm = element;\n    this.params = params;\n    this.rotationAngle = 0;\n    // this.elm.mask = this;\n  }\n\n  setAngle = (newAngle) => {\n    this.rotationAngle += newAngle; // * (180 / Math.PI);\n  }\n\n  setSize = (widthNew, heightNew) => {\n    this.params.width = widthNew;\n    this.params.height = heightNew;\n  };\n\n  setPosition = (x, y) => {\n    this.params.x = x;\n    this.params.y = y;\n  };\n\n  calcRotation = (x, y, angle) => {\n    const cos = Math.cos(angle);\n    const sin = Math.sin(angle)\n    const nx = x * cos - y * sin;\n    const ny = y * cos + x * sin;\n    return { x: nx, y: ny };\n  }\n\n  renderMask = () => {\n    const { x, y, width, height, anchorX, anchorY } = this.params; // eslint-disable-line\n    const nx = x - (width * anchorX);\n    const ny = y - (height * anchorY)\n    this.clear();\n    this.beginFill(0xff0000);\n    const v0 = this.calcRotation(\n      nx,\n      ny,\n      this.rotationAngle,\n    );\n    this.moveTo(\n      v0.x,\n      v0.y\n    );\n    const v1 = this.calcRotation(\n      nx + width,\n      ny,\n      this.rotationAngle,\n    );\n    this.lineTo(\n      v1.x,\n      v1.y,\n    );\n\n    const v2 = this.calcRotation(\n      nx + width,\n      ny + height,\n      this.rotationAngle,\n    );\n\n    this.lineTo(\n      v2.x,\n      v2.y,\n    );\n\n    const v3 = this.calcRotation(\n      nx,\n      ny + height,\n      this.rotationAngle,\n    );\n\n    this.lineTo(\n      v3.x,\n      v3.y,\n      this.rotationAngle,\n    );\n\n    this.lineTo(\n      v0.x,\n      v0.y,\n    );\n\n    this.endFill();\n    this.lineStyle(0);\n  };\n\n  setSizeMaskWithAnimation = (newWidth, newHeight, duration) => {\n    TweenMax.to(\n      this.params,\n      duration,\n      {\n        width: newWidth,\n        height: newHeight,\n        ease: Expo.easeInOut,\n        onUpdate: this.animateMask,\n      }\n    );\n  };\n\n  animateMask = () => {\n    this.renderMask();\n  };\n\n  removeMask = () => {\n    this.elm.mask = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}