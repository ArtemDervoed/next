{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport { Expo, TweenMax } from 'gsap';\nimport * as PIXI from 'pixi.js';\nimport { jsImageCover } from './jsImageCover'; // import ImageBehaviour from './ImageBehaviour';\n\nimport Mask from './Mask';\nexport default class PixiImage extends PIXI.Container {\n  constructor(texture, opt) {\n    super();\n\n    _defineProperty(this, \"addRotate\", angle => {\n      this.angleT += angle;\n    });\n\n    _defineProperty(this, \"getWidth\", () => {\n      return this.mask.width;\n    });\n\n    _defineProperty(this, \"getheight\", () => {\n      return this.mask.height;\n    });\n\n    _defineProperty(this, \"setSize\", (widthNew, heightNew) => {\n      const {\n        width,\n        height\n      } = jsImageCover(this.sprite, widthNew, heightNew);\n      this.sprite.width = width;\n      this.sprite.height = height;\n      this.mask.setSize(widthNew, heightNew);\n      this.opt.width = widthNew;\n      this.opt.height = heightNew;\n      this.mask.renderMask();\n    });\n\n    _defineProperty(this, \"setSizeWithAnimation\", (widthNew, heightNew, duration) => {\n      const {\n        width,\n        height\n      } = jsImageCover(this.sprite, widthNew, heightNew);\n      TweenMax.to(this.sprite, duration, {\n        width,\n        height,\n        ease: Expo.easeInOut\n      });\n    });\n\n    _defineProperty(this, \"setPosition\", (x, y) => {\n      this.sprite.x = x;\n      this.sprite.y = y;\n      this.opt.x = x;\n      this.opt.y = y;\n      this.mask.setPosition(x, y);\n      this.mask.renderMask();\n    });\n\n    _defineProperty(this, \"setNewTexture\", url => {\n      this.textureTemp = url;\n      this.sprite = PIXI.Sprite.from(this.textureTemp);\n      this.sprite.anchor.set(this.opt.anchorX, this.opt.anchorY);\n      this.sprite.x = this.opt.x;\n      this.sprite.y = this.opt.y;\n      const {\n        width,\n        height\n      } = jsImageCover(this.sprite, this.opt.width, this.opt.height);\n      this.sprite.width = width;\n      this.sprite.height = height; // this.imageBehaviour = new ImageBehaviour(this.sprite, this);\n\n      this.removeChildAt(1);\n      this.addChild(this.sprite);\n    });\n\n    _defineProperty(this, \"setSizeMaskWithAnimation\", (newWidth, newHeight, duration) => {\n      this.mask.setSizeMaskWithAnimation(newWidth, newHeight, duration);\n      this.setSizeWithAnimation(newWidth, newHeight, duration);\n    });\n\n    _defineProperty(this, \"hide\", duration => {// this.imageBehaviour.hide(duration);\n    });\n\n    _defineProperty(this, \"hideWithDisplacement\", (duration, callback, isFrom) => {// this.imageBehaviour.hideWithDisplacement(duration, callback, isFrom);\n    });\n\n    _defineProperty(this, \"hideFilter\", (filterName, duration) => {// this.imageBehaviour.hideFilter(filterName, duration);\n    });\n\n    _defineProperty(this, \"removeMask\", () => {\n      this.mask.removeMask();\n    });\n\n    this.opt = opt;\n    this.textureTemp = texture;\n    this.sprite = PIXI.Sprite.from(this.textureTemp);\n    this.sprite.anchor.set(this.opt.anchorX, this.opt.anchorY);\n    this.sprite.x = this.opt.x;\n    this.sprite.y = this.opt.y;\n    const {\n      width: _width,\n      height: _height\n    } = jsImageCover(this.sprite, this.opt.width, this.opt.height);\n    this.sprite.width = _width;\n    this.sprite.height = _height;\n    this.filtersTemp = this.opt.filters || [];\n    this.angleT = 0;\n    this.mask = new Mask(this.sprite, {\n      x: this.opt.x,\n      y: this.opt.y,\n      width: this.opt.width,\n      height: this.opt.height,\n      anchorX: this.opt.anchorX,\n      anchorY: this.opt.anchorY\n    });\n    this.mask.renderMask();\n    this.addChild(this.mask); // this.imageBehaviour = new ImageBehaviour(this.sprite, this);\n\n    this.addChild(this.sprite);\n  }\n\n}","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/PixiImage.js"],"names":["Expo","TweenMax","PIXI","jsImageCover","Mask","PixiImage","Container","constructor","texture","opt","angle","angleT","mask","width","height","widthNew","heightNew","sprite","setSize","renderMask","duration","to","ease","easeInOut","x","y","setPosition","url","textureTemp","Sprite","from","anchor","set","anchorX","anchorY","removeChildAt","addChild","newWidth","newHeight","setSizeMaskWithAnimation","setSizeWithAnimation","callback","isFrom","filterName","removeMask","filtersTemp","filters"],"mappings":"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","sourcesContent":["import { Expo, TweenMax } from 'gsap';\nimport * as PIXI from 'pixi.js';\nimport { jsImageCover } from './jsImageCover';\n// import ImageBehaviour from './ImageBehaviour';\nimport Mask from './Mask';\n\nexport default class PixiImage extends PIXI.Container {\n  constructor(texture, opt) {\n    super();\n    this.opt = opt;\n    this.textureTemp = texture;\n    this.sprite = PIXI.Sprite.from(this.textureTemp);\n    this.sprite.anchor.set(this.opt.anchorX, this.opt.anchorY);\n    this.sprite.x = this.opt.x;\n    this.sprite.y = this.opt.y;\n    const { width, height } = jsImageCover(this.sprite, this.opt.width, this.opt.height);\n    this.sprite.width = width;\n    this.sprite.height = height;\n    this.filtersTemp = this.opt.filters || [];\n    this.angleT = 0;\n    this.mask = new Mask(this.sprite, {\n      x: this.opt.x,\n      y: this.opt.y,\n      width: this.opt.width,\n      height: this.opt.height,\n      anchorX: this.opt.anchorX,\n      anchorY: this.opt.anchorY,\n    });\n    this.mask.renderMask();\n    this.addChild(this.mask);\n    // this.imageBehaviour = new ImageBehaviour(this.sprite, this);\n    this.addChild(this.sprite);\n  }\n\n  addRotate = (angle) => {\n    this.angleT += angle;\n  };\n\n  getWidth = () => {\n    return this.mask.width;\n  }\n\n  getheight = () => {\n    return this.mask.height;\n  }\n\n  setSize = (widthNew, heightNew) => {\n    const { width, height } = jsImageCover(this.sprite, widthNew, heightNew);\n    this.sprite.width = width;\n    this.sprite.height = height;\n    this.mask.setSize(widthNew, heightNew);\n    this.opt.width = widthNew;\n    this.opt.height = heightNew;\n    this.mask.renderMask();\n  };\n\n  setSizeWithAnimation = (widthNew, heightNew, duration) => {\n    const { width, height } = jsImageCover(this.sprite, widthNew, heightNew);\n\n    TweenMax.to(\n      this.sprite,\n      duration,\n      {\n        width,\n        height,\n        ease: Expo.easeInOut,\n      }\n    );\n  };\n\n  setPosition = (x, y) => {\n    this.sprite.x = x;\n    this.sprite.y = y;\n    this.opt.x = x;\n    this.opt.y = y;\n    this.mask.setPosition(x, y);\n    this.mask.renderMask();\n  };\n\n  setNewTexture = (url) => {\n    this.textureTemp = url;\n    this.sprite = PIXI.Sprite.from(this.textureTemp);\n    this.sprite.anchor.set(this.opt.anchorX, this.opt.anchorY);\n    this.sprite.x = this.opt.x;\n    this.sprite.y = this.opt.y;\n    const { width, height } = jsImageCover(this.sprite, this.opt.width, this.opt.height);\n    \n    this.sprite.width = width;\n    this.sprite.height = height;\n    // this.imageBehaviour = new ImageBehaviour(this.sprite, this);\n    this.removeChildAt(1);\n    this.addChild(this.sprite);\n  }\n\n  setSizeMaskWithAnimation = (newWidth, newHeight, duration) => {\n    this.mask.setSizeMaskWithAnimation(newWidth, newHeight, duration);\n    this.setSizeWithAnimation(newWidth, newHeight, duration);\n  };\n\n  hide = (duration) => {\n    // this.imageBehaviour.hide(duration);\n  };\n\n  hideWithDisplacement = (duration, callback, isFrom) => {\n    // this.imageBehaviour.hideWithDisplacement(duration, callback, isFrom);\n  };\n\n  hideFilter = (filterName, duration) => {\n    // this.imageBehaviour.hideFilter(filterName, duration);\n  };\n\n  removeMask = () => {\n    this.mask.removeMask();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}