{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/Sphere/Sphere.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl';\nimport * as THREE from 'three'; // import TRYGalien from './TRYGalien.woff2';\n\nexport default class Sphere extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleMouseMove\", e => {\n      this.mouse.x = e.clientX / window.innerWidth * 2 - 1;\n      this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    });\n\n    _defineProperty(this, \"animate\", () => {\n      requestAnimationFrame(this.animate);\n    });\n  }\n\n  componentDidMount() {\n    this.mouse = {\n      x: 0,\n      y: 0\n    };\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer = new THREE.WebGLRenderer();\n    renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n    this.camera = new THREE.PerspectiveCamera(75, this.width / this.height, 0.1, 1000);\n    this.camera.position.set(2, -1.5, -1);\n    this.camera.lookAt(new THREE.Vector3()); // this.controls = new THREE.OrbitControls(this.camera, context.canvas);\n\n    this.scene = new THREE.Scene();\n    this.renderer.setSize(this.width, this.height);\n    this.canvas.appendChild(renderer.domElement);\n    window.addEventListener('mousemove', this.handleMouseMove);\n    this.animate();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      ref: node => {\n        this.canvas = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/msi/hello-next/components/Sphere/Sphere.js"],"names":["textFragment","textVertex","THREE","Sphere","React","PureComponent","e","mouse","x","clientX","window","innerWidth","y","clientY","innerHeight","requestAnimationFrame","animate","componentDidMount","width","height","renderer","WebGLRenderer","setClearColor","camera","PerspectiveCamera","position","set","lookAt","Vector3","scene","Scene","setSize","canvas","appendChild","domElement","addEventListener","handleMouseMove","render","node"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AAEA,eAAe,MAAMC,MAAN,SAAqBC,KAAK,CAACC,aAA3B,CAAyC;AAAA;AAAA;;AAAA,6CA4BnCC,CAAD,IAAO;AACvB,WAAKC,KAAL,CAAWC,CAAX,GAAiBF,CAAC,CAACG,OAAF,GAAYC,MAAM,CAACC,UAArB,GAAoC,CAApC,GAAwC,CAAvD;AACD,WAAKJ,KAAL,CAAWK,CAAX,GAAe,EAAIN,CAAC,CAACO,OAAF,GAAYH,MAAM,CAACI,WAAvB,IAAuC,CAAvC,GAA2C,CAA1D;AACA,KA/BqD;;AAAA,qCAiC5C,MAAM;AACdC,MAAAA,qBAAqB,CAAE,KAAKC,OAAP,CAArB;AACD,KAnCqD;AAAA;;AACtDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,KAAL,GAAa;AACXC,MAAAA,CAAC,EAAE,CADQ;AAEXI,MAAAA,CAAC,EAAE;AAFQ,KAAb;AAIA,SAAKM,KAAL,GAAaR,MAAM,CAACC,UAApB;AACA,SAAKQ,MAAL,GAAcT,MAAM,CAACI,WAArB;AAEA,SAAKM,QAAL,GAAgB,IAAIlB,KAAK,CAACmB,aAAV,EAAhB;AAEAD,IAAAA,QAAQ,CAACE,aAAT,CAAuB,oBAAvB,EAA6C,CAA7C;AAGA,SAAKC,MAAL,GAAc,IAAIrB,KAAK,CAACsB,iBAAV,CAA6B,EAA7B,EAAiC,KAAKN,KAAL,GAAa,KAAKC,MAAnD,EAA2D,GAA3D,EAAgE,IAAhE,CAAd;AACA,SAAKI,MAAL,CAAYE,QAAZ,CAAqBC,GAArB,CAAyB,CAAzB,EAA4B,CAAC,GAA7B,EAAkC,CAAC,CAAnC;AAEA,SAAKH,MAAL,CAAYI,MAAZ,CAAmB,IAAIzB,KAAK,CAAC0B,OAAV,EAAnB,EAhBkB,CAiBlB;;AAEA,SAAKC,KAAL,GAAa,IAAI3B,KAAK,CAAC4B,KAAV,EAAb;AACA,SAAKV,QAAL,CAAcW,OAAd,CAAsB,KAAKb,KAA3B,EAAkC,KAAKC,MAAvC;AACA,SAAKa,MAAL,CAAYC,WAAZ,CAAyBb,QAAQ,CAACc,UAAlC;AAEAxB,IAAAA,MAAM,CAACyB,gBAAP,CAAwB,WAAxB,EAAqC,KAAKC,eAA1C;AACA,SAAKpB,OAAL;AACD;;AAWDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAGC,IAAD,IAAU;AAAE,aAAKN,MAAL,GAAcM,IAAd;AAAmB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAzCqD","sourcesContent":["import textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\n\nimport * as THREE from 'three';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class Sphere extends React.PureComponent {\n  componentDidMount() {\n    this.mouse = {\n      x: 0,\n      y: 0,\n    }\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n\n    this.renderer = new THREE.WebGLRenderer();\n\n    renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n\n\n    this.camera = new THREE.PerspectiveCamera( 75, this.width / this.height, 0.1, 1000 );\n    this.camera.position.set(2, -1.5, -1);\n\n    this.camera.lookAt(new THREE.Vector3());\n    // this.controls = new THREE.OrbitControls(this.camera, context.canvas);\n\n    this.scene = new THREE.Scene();\n    this.renderer.setSize(this.width, this.height);\n    this.canvas.appendChild( renderer.domElement );\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    this.animate();\n  }\n\n  handleMouseMove = (e) => {\n    this.mouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t  this.mouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  animate = () => {\n    requestAnimationFrame( this.animate );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}