{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/Sphere/Sphere.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fragmentShader from './fragment.glsl';\nimport vertexShader from './vertex.glsl';\nimport * as THREE from 'three'; // import TRYGalien from './TRYGalien.woff2';\n\nvar Sphere =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Sphere, _React$PureComponent);\n\n  function Sphere() {\n    var _this;\n\n    _classCallCheck(this, Sphere);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sphere).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (e) {\n      _this.mouse.x = e.clientX / window.innerWidth * 2 - 1;\n      _this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function () {\n      _this.renderer.render(_this.scene, _this.camera);\n\n      _this.pMaterial.uniforms.iTime.value = _this.time * 0.175;\n      _this.time++;\n      requestAnimationFrame(_this.animate);\n    });\n\n    _this.time = 0;\n    _this.mouse = {\n      x: 0,\n      y: 0\n    };\n    return _this;\n  }\n\n  _createClass(Sphere, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n      this.camera = new THREE.PerspectiveCamera(75, this.width / this.height, 0.1, 1000);\n      this.camera.position.set(2, -1.5, -1);\n      this.camera.lookAt(new THREE.Vector3());\n      this.scene = new THREE.Scene();\n      this.camera.position.z = 5;\n      this.renderer.setSize(this.width, this.height);\n      this.canvas.appendChild(this.renderer.domElement);\n      this.particles = new THREE.OctahedronGeometry(1, 5);\n      this.particles.vertices = this.particles.vertices.map(function (v) {\n        v.x += (Math.random() - 0.5) * 0.05;\n        v.y += (Math.random() - 0.5) * 0.05;\n        v.z += (Math.random() - 0.5) * 0.05;\n        return v;\n      });\n      this.shaderPoint = THREE.ShaderLib.points;\n      this.uniforms = _objectSpread({}, this.shaderPoint.uniforms, {\n        iTime: {\n          value: 0\n        },\n        pSize: {\n          value: 10\n        }\n      });\n      this.pMaterial = new THREE.ShaderMaterial({\n        uniforms: this.uniforms,\n        transparent: true,\n        depthWrite: false,\n        blending: THREE.AdditiveBlending,\n        fragmentShader: fragmentShader,\n        vertexShader: vertexShader\n      });\n      this.particleSystem = new THREE.Points(this.particles, this.pMaterial);\n      this.particleSystem.sortParticles = true;\n      this.scene.add(this.particleSystem);\n      window.addEventListener('mousemove', this.handleMouseMove);\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        ref: function ref(node) {\n          _this2.canvas = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Sphere;\n}(React.PureComponent);\n\nexport { Sphere as default };","map":{"version":3,"sources":["/Users/msi/hello-next/components/Sphere/Sphere.js"],"names":["fragmentShader","vertexShader","THREE","Sphere","e","mouse","x","clientX","window","innerWidth","y","clientY","innerHeight","renderer","render","scene","camera","pMaterial","uniforms","iTime","value","time","requestAnimationFrame","animate","width","height","WebGLRenderer","setClearColor","PerspectiveCamera","position","set","lookAt","Vector3","Scene","z","setSize","canvas","appendChild","domElement","particles","OctahedronGeometry","vertices","map","v","Math","random","shaderPoint","ShaderLib","points","pSize","ShaderMaterial","transparent","depthWrite","blending","AdditiveBlending","particleSystem","Points","sortParticles","add","addEventListener","handleMouseMove","node","React","PureComponent"],"mappings":"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","sourcesContent":["import fragmentShader from './fragment.glsl'\nimport vertexShader from './vertex.glsl';\n\nimport * as THREE from 'three';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class Sphere extends React.PureComponent {\n  constructor() {\n    super();\n    this.time = 0;\n    this.mouse = {\n      x: 0,\n      y: 0,\n    }\n  }\n  componentDidMount() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n\n    this.renderer = new THREE.WebGLRenderer();\n\n    this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n\n\n    this.camera = new THREE.PerspectiveCamera( 75, this.width / this.height, 0.1, 1000 );\n    this.camera.position.set(2, -1.5, -1);\n\n    this.camera.lookAt(new THREE.Vector3());\n\n    this.scene = new THREE.Scene();\n\n    this.camera.position.z = 5;\n    this.renderer.setSize(this.width, this.height);\n    this.canvas.appendChild(this.renderer.domElement);\n\n    this.particles = new THREE.OctahedronGeometry(1, 5);\n    this.particles.vertices = this.particles.vertices.map(v => {\n        v.x += (Math.random() - 0.5) * 0.05;\n        v.y += (Math.random() - 0.5) * 0.05;\n        v.z += (Math.random() - 0.5) * 0.05;\n        return v;\n    });\n\n    this.shaderPoint = THREE.ShaderLib.points;\n    this.uniforms = {\n        ...this.shaderPoint.uniforms,\n        iTime: { value: 0 },\n        pSize: { value: 10 },\n    };\n\n    this.pMaterial = new THREE.ShaderMaterial({\n        uniforms: this.uniforms,\n        transparent: true,\n        depthWrite: false,\n\n        blending: THREE.AdditiveBlending,\n\n        fragmentShader,\n        vertexShader,\n    });\n    \n\n    this.particleSystem = new THREE.Points(this.particles, this.pMaterial);\n    this.particleSystem.sortParticles = true;\n    \n    this.scene.add(this.particleSystem);\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    this.animate();\n  }\n\n  handleMouseMove = (e) => {\n    this.mouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t  this.mouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  animate = () => {\n    this.renderer.render( this.scene, this.camera );\n    this.pMaterial.uniforms.iTime.value = this.time * 0.175;\n    this.time++;\n    requestAnimationFrame( this.animate );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}