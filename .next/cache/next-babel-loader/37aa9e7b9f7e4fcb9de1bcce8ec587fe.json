{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/Sphere/Sphere.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl';\nimport * as THREE from 'three'; // import TRYGalien from './TRYGalien.woff2';\n\nvar Sphere =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Sphere, _React$PureComponent);\n\n  function Sphere() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sphere);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sphere)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (e) {\n      _this.mouse.x = e.clientX / window.innerWidth * 2 - 1;\n      _this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function () {\n      requestAnimationFrame(_this.animate);\n    });\n\n    return _this;\n  }\n\n  _createClass(Sphere, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mouse = {\n        x: 0,\n        y: 0\n      };\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n      this.camera = new THREE.PerspectiveCamera(75, this.width / this.height, 0.1, 1000);\n      this.camera.position.set(2, -1.5, -1);\n      this.camera.lookAt(new THREE.Vector3()); // this.controls = new THREE.OrbitControls(this.camera, context.canvas);\n\n      this.scene = new THREE.Scene();\n      this.renderer.setSize(this.width, this.height);\n      this.canvas.appendChild(renderer.domElement);\n      window.addEventListener('mousemove', this.handleMouseMove);\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        ref: function ref(node) {\n          _this2.canvas = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Sphere;\n}(React.PureComponent);\n\nexport { Sphere as default };","map":{"version":3,"sources":["/Users/msi/hello-next/components/Sphere/Sphere.js"],"names":["textFragment","textVertex","THREE","Sphere","e","mouse","x","clientX","window","innerWidth","y","clientY","innerHeight","requestAnimationFrame","animate","width","height","renderer","WebGLRenderer","setClearColor","camera","PerspectiveCamera","position","set","lookAt","Vector3","scene","Scene","setSize","canvas","appendChild","domElement","addEventListener","handleMouseMove","node","React","PureComponent"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;IAEqBC,M;;;;;;;;;;;;;;;;;;sEA4BD,UAACC,CAAD,EAAO;AACvB,YAAKC,KAAL,CAAWC,CAAX,GAAiBF,CAAC,CAACG,OAAF,GAAYC,MAAM,CAACC,UAArB,GAAoC,CAApC,GAAwC,CAAvD;AACD,YAAKJ,KAAL,CAAWK,CAAX,GAAe,EAAIN,CAAC,CAACO,OAAF,GAAYH,MAAM,CAACI,WAAvB,IAAuC,CAAvC,GAA2C,CAA1D;AACA,K;;8DAES,YAAM;AACdC,MAAAA,qBAAqB,CAAE,MAAKC,OAAP,CAArB;AACD,K;;;;;;;wCAlCmB;AAClB,WAAKT,KAAL,GAAa;AACXC,QAAAA,CAAC,EAAE,CADQ;AAEXI,QAAAA,CAAC,EAAE;AAFQ,OAAb;AAIA,WAAKK,KAAL,GAAaP,MAAM,CAACC,UAApB;AACA,WAAKO,MAAL,GAAcR,MAAM,CAACI,WAArB;AAEA,WAAKK,QAAL,GAAgB,IAAIf,KAAK,CAACgB,aAAV,EAAhB;AAEA,WAAKD,QAAL,CAAcE,aAAd,CAA4B,oBAA5B,EAAkD,CAAlD;AAGA,WAAKC,MAAL,GAAc,IAAIlB,KAAK,CAACmB,iBAAV,CAA6B,EAA7B,EAAiC,KAAKN,KAAL,GAAa,KAAKC,MAAnD,EAA2D,GAA3D,EAAgE,IAAhE,CAAd;AACA,WAAKI,MAAL,CAAYE,QAAZ,CAAqBC,GAArB,CAAyB,CAAzB,EAA4B,CAAC,GAA7B,EAAkC,CAAC,CAAnC;AAEA,WAAKH,MAAL,CAAYI,MAAZ,CAAmB,IAAItB,KAAK,CAACuB,OAAV,EAAnB,EAhBkB,CAiBlB;;AAEA,WAAKC,KAAL,GAAa,IAAIxB,KAAK,CAACyB,KAAV,EAAb;AACA,WAAKV,QAAL,CAAcW,OAAd,CAAsB,KAAKb,KAA3B,EAAkC,KAAKC,MAAvC;AACA,WAAKa,MAAL,CAAYC,WAAZ,CAAyBb,QAAQ,CAACc,UAAlC;AAEAvB,MAAAA,MAAM,CAACwB,gBAAP,CAAwB,WAAxB,EAAqC,KAAKC,eAA1C;AACA,WAAKnB,OAAL;AACD;;;6BAWQ;AAAA;;AACP,aACE;AAAK,QAAA,GAAG,EAAE,aAACoB,IAAD,EAAU;AAAE,UAAA,MAAI,CAACL,MAAL,GAAcK,IAAd;AAAmB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAzCiCC,KAAK,CAACC,a;;SAArBjC,M","sourcesContent":["import textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\n\nimport * as THREE from 'three';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class Sphere extends React.PureComponent {\n  componentDidMount() {\n    this.mouse = {\n      x: 0,\n      y: 0,\n    }\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n\n    this.renderer = new THREE.WebGLRenderer();\n\n    this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n\n\n    this.camera = new THREE.PerspectiveCamera( 75, this.width / this.height, 0.1, 1000 );\n    this.camera.position.set(2, -1.5, -1);\n\n    this.camera.lookAt(new THREE.Vector3());\n    // this.controls = new THREE.OrbitControls(this.camera, context.canvas);\n\n    this.scene = new THREE.Scene();\n    this.renderer.setSize(this.width, this.height);\n    this.canvas.appendChild( renderer.domElement );\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    this.animate();\n  }\n\n  handleMouseMove = (e) => {\n    this.mouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t  this.mouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  animate = () => {\n    requestAnimationFrame( this.animate );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}