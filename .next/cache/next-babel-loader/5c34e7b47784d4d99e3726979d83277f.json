{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/Sphere/Sphere.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl';\nimport * as THREE from 'three'; // import TRYGalien from './TRYGalien.woff2';\n\nexport default class Sphere extends React.PureComponent {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleMouseMove\", e => {\n      this.mouse.x = e.clientX / window.innerWidth * 2 - 1;\n      this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    });\n\n    _defineProperty(this, \"animate\", () => {\n      requestAnimationFrame(this.animate);\n    });\n\n    this.mouse = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  componentDidMount() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n    this.camera = new THREE.PerspectiveCamera(75, this.width / this.height, 0.1, 1000);\n    this.camera.position.set(2, -1.5, -1);\n    this.camera.lookAt(new THREE.Vector3());\n    this.scene = new THREE.Scene();\n    this.geometry = new THREE.BoxGeometry(1, 1, 1);\n    this.material = new THREE.MeshBasicMaterial({\n      color: 0xffff00\n    });\n    this.cube = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.cube);\n    this.camera.position.z = 1;\n    this.renderer.setSize(this.width, this.height);\n    this.canvas.appendChild(this.renderer.domElement);\n    window.addEventListener('mousemove', this.handleMouseMove);\n    this.animate();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      ref: node => {\n        this.canvas = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/msi/hello-next/components/Sphere/Sphere.js"],"names":["textFragment","textVertex","THREE","Sphere","React","PureComponent","constructor","e","mouse","x","clientX","window","innerWidth","y","clientY","innerHeight","requestAnimationFrame","animate","componentDidMount","width","height","renderer","WebGLRenderer","setClearColor","camera","PerspectiveCamera","position","set","lookAt","Vector3","scene","Scene","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","z","setSize","canvas","appendChild","domElement","addEventListener","handleMouseMove","render","node"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AAEA,eAAe,MAAMC,MAAN,SAAqBC,KAAK,CAACC,aAA3B,CAAyC;AACtDC,EAAAA,WAAW,GAAG;AACZ;;AADY,6CAmCKC,CAAD,IAAO;AACvB,WAAKC,KAAL,CAAWC,CAAX,GAAiBF,CAAC,CAACG,OAAF,GAAYC,MAAM,CAACC,UAArB,GAAoC,CAApC,GAAwC,CAAvD;AACD,WAAKJ,KAAL,CAAWK,CAAX,GAAe,EAAIN,CAAC,CAACO,OAAF,GAAYH,MAAM,CAACI,WAAvB,IAAuC,CAAvC,GAA2C,CAA1D;AACA,KAtCa;;AAAA,qCAwCJ,MAAM;AACdC,MAAAA,qBAAqB,CAAE,KAAKC,OAAP,CAArB;AACD,KA1Ca;;AAEZ,SAAKT,KAAL,GAAa;AACXC,MAAAA,CAAC,EAAE,CADQ;AAEXI,MAAAA,CAAC,EAAE;AAFQ,KAAb;AAID;;AACDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,GAAaR,MAAM,CAACC,UAApB;AACA,SAAKQ,MAAL,GAAcT,MAAM,CAACI,WAArB;AAEA,SAAKM,QAAL,GAAgB,IAAInB,KAAK,CAACoB,aAAV,EAAhB;AAEA,SAAKD,QAAL,CAAcE,aAAd,CAA4B,oBAA5B,EAAkD,CAAlD;AAGA,SAAKC,MAAL,GAAc,IAAItB,KAAK,CAACuB,iBAAV,CAA6B,EAA7B,EAAiC,KAAKN,KAAL,GAAa,KAAKC,MAAnD,EAA2D,GAA3D,EAAgE,IAAhE,CAAd;AACA,SAAKI,MAAL,CAAYE,QAAZ,CAAqBC,GAArB,CAAyB,CAAzB,EAA4B,CAAC,GAA7B,EAAkC,CAAC,CAAnC;AAEA,SAAKH,MAAL,CAAYI,MAAZ,CAAmB,IAAI1B,KAAK,CAAC2B,OAAV,EAAnB;AAEA,SAAKC,KAAL,GAAa,IAAI5B,KAAK,CAAC6B,KAAV,EAAb;AACA,SAAKC,QAAL,GAAgB,IAAI9B,KAAK,CAAC+B,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAhB;AACA,SAAKC,QAAL,GAAgB,IAAIhC,KAAK,CAACiC,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAhB;AACA,SAAKC,IAAL,GAAY,IAAInC,KAAK,CAACoC,IAAV,CAAe,KAAKN,QAApB,EAA8B,KAAKE,QAAnC,CAAZ;AACA,SAAKJ,KAAL,CAAWS,GAAX,CAAgB,KAAKF,IAArB;AAEA,SAAKb,MAAL,CAAYE,QAAZ,CAAqBc,CAArB,GAAyB,CAAzB;AACA,SAAKnB,QAAL,CAAcoB,OAAd,CAAsB,KAAKtB,KAA3B,EAAkC,KAAKC,MAAvC;AACA,SAAKsB,MAAL,CAAYC,WAAZ,CAAwB,KAAKtB,QAAL,CAAcuB,UAAtC;AAEAjC,IAAAA,MAAM,CAACkC,gBAAP,CAAwB,WAAxB,EAAqC,KAAKC,eAA1C;AACA,SAAK7B,OAAL;AACD;;AAWD8B,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAGC,IAAD,IAAU;AAAE,aAAKN,MAAL,GAAcM,IAAd;AAAmB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAjDqD","sourcesContent":["import textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\n\nimport * as THREE from 'three';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class Sphere extends React.PureComponent {\n  constructor() {\n    super();\n    this.mouse = {\n      x: 0,\n      y: 0,\n    }\n  }\n  componentDidMount() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n\n    this.renderer = new THREE.WebGLRenderer();\n\n    this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n\n\n    this.camera = new THREE.PerspectiveCamera( 75, this.width / this.height, 0.1, 1000 );\n    this.camera.position.set(2, -1.5, -1);\n\n    this.camera.lookAt(new THREE.Vector3());\n\n    this.scene = new THREE.Scene();\n    this.geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    this.material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\n    this.cube = new THREE.Mesh(this.geometry, this.material );\n    this.scene.add( this.cube );\n\n    this.camera.position.z = 1;\n    this.renderer.setSize(this.width, this.height);\n    this.canvas.appendChild(this.renderer.domElement)\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    this.animate();\n  }\n\n  handleMouseMove = (e) => {\n    this.mouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t  this.mouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  animate = () => {\n    requestAnimationFrame( this.animate );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}