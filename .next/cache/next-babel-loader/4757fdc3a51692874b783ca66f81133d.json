{"ast":null,"code":"export var jsImageCover = function jsImageCover(image, innerWidth, innerHeight) {\n  if (!innerHeight) {\n    var widthK = innerWidth / image.width;\n    return {\n      width: image.width * widthK,\n      height: image.height * widthK\n    };\n  }\n\n  var screenAspect = innerWidth / innerHeight;\n  var imageAspect = image.width / image.height;\n\n  if (screenAspect > imageAspect) {\n    return {\n      width: innerWidth,\n      height: innerWidth / image.width * image.height\n    };\n  }\n\n  return {\n    width: innerHeight / image.height * image.width,\n    height: innerHeight\n  };\n};","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/jsImageCover.js"],"names":["jsImageCover","image","innerWidth","innerHeight","widthK","width","height","screenAspect","imageAspect"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,UAAR,EAAoBC,WAApB,EAAoC;AAC9D,MAAI,CAACA,WAAL,EAAkB;AAChB,QAAMC,MAAM,GAAGF,UAAU,GAAGD,KAAK,CAACI,KAAlC;AACA,WAAO;AACLA,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAcD,MADhB;AAELE,MAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,GAAeF;AAFlB,KAAP;AAID;;AACD,MAAMG,YAAY,GAAGL,UAAU,GAAGC,WAAlC;AACA,MAAMK,WAAW,GAAGP,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACK,MAAxC;;AACA,MAAIC,YAAY,GAAGC,WAAnB,EAAgC;AAC9B,WAAO;AACLH,MAAAA,KAAK,EAAEH,UADF;AAELI,MAAAA,MAAM,EAAGJ,UAAU,GAAGD,KAAK,CAACI,KAApB,GAA6BJ,KAAK,CAACK;AAFtC,KAAP;AAID;;AACD,SAAO;AACLD,IAAAA,KAAK,EAAGF,WAAW,GAAGF,KAAK,CAACK,MAArB,GAA+BL,KAAK,CAACI,KADvC;AAELC,IAAAA,MAAM,EAAEH;AAFH,GAAP;AAID,CApBM","sourcesContent":["export const jsImageCover = (image, innerWidth, innerHeight) => {\n  if (!innerHeight) {\n    const widthK = innerWidth / image.width;\n    return {\n      width: image.width * widthK,\n      height: image.height * widthK,\n    };\n  }\n  const screenAspect = innerWidth / innerHeight;\n  const imageAspect = image.width / image.height;\n  if (screenAspect > imageAspect) {\n    return {\n      width: innerWidth,\n      height: (innerWidth / image.width) * image.height,\n    };\n  }\n  return {\n    width: (innerHeight / image.height) * image.width,\n    height: innerHeight,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}