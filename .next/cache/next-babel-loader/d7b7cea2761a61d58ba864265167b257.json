{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/SphereSlider/SphereSlider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl'; // import TRYGalien from './TRYGalien.woff2';\n\nexport default class SphereSlider extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"animate\", () => {\n      this.material.needsUpdate = true;\n      requestAnimationFrame(this.animate); // this.cube.rotation.x += 0.01;\n      // this.cube.rotation.y += 0.01;\n\n      this.renderer.render(this.scene, this.camera);\n    });\n  }\n\n  componentDidMount() {\n    this.PIXI = require('pixi.js');\n    const app = new this.PIXI.Application({\n      backgroundColor: 0x1099bb\n    });\n    this.canvas.appendChild(app.view);\n    const basicText = new this.PIXI.Text('Basic text in pixi');\n    basicText.x = 50;\n    basicText.y = 100;\n    app.stage.addChild(basicText);\n    const style = new this.PIXI.TextStyle({\n      fontFamily: 'Arial',\n      fontSize: 36,\n      fontStyle: 'italic',\n      fontWeight: 'bold',\n      fill: ['#ffffff', '#00ff99'],\n      // gradient\n      stroke: '#4a1850',\n      strokeThickness: 5,\n      dropShadow: true,\n      dropShadowColor: '#000000',\n      dropShadowBlur: 4,\n      dropShadowAngle: Math.PI / 6,\n      dropShadowDistance: 6,\n      wordWrap: true,\n      wordWrapWidth: 440\n    });\n    const richText = new this.PIXI.Text('Rich text with a lot of options and across multiple lines', style);\n    richText.x = 50;\n    richText.y = 250;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      ref: node => {\n        this.canvas = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/SphereSlider.js"],"names":["textFragment","textVertex","SphereSlider","React","PureComponent","material","needsUpdate","requestAnimationFrame","animate","renderer","render","scene","camera","componentDidMount","PIXI","require","app","Application","backgroundColor","canvas","appendChild","view","basicText","Text","x","y","stage","addChild","style","TextStyle","fontFamily","fontSize","fontStyle","fontWeight","fill","stroke","strokeThickness","dropShadow","dropShadowColor","dropShadowBlur","dropShadowAngle","Math","PI","dropShadowDistance","wordWrap","wordWrapWidth","richText","node"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AAEA,eAAe,MAAMC,YAAN,SAA2BC,KAAK,CAACC,aAAjC,CAA+C;AAAA;AAAA;;AAAA,qCAmClD,MAAM;AACd,WAAKC,QAAL,CAAcC,WAAd,GAA4B,IAA5B;AACAC,MAAAA,qBAAqB,CAAE,KAAKC,OAAP,CAArB,CAFc,CAGd;AACF;;AACE,WAAKC,QAAL,CAAcC,MAAd,CAAsB,KAAKC,KAA3B,EAAkC,KAAKC,MAAvC;AACD,KAzC2D;AAAA;;AAC5DC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,IAAL,GAAYC,OAAO,CAAC,SAAD,CAAnB;AACA,UAAMC,GAAG,GAAG,IAAI,KAAKF,IAAL,CAAUG,WAAd,CAA0B;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAA1B,CAAZ;AACA,SAAKC,MAAL,CAAYC,WAAZ,CAAwBJ,GAAG,CAACK,IAA5B;AAEA,UAAMC,SAAS,GAAG,IAAI,KAAKR,IAAL,CAAUS,IAAd,CAAmB,oBAAnB,CAAlB;AACAD,IAAAA,SAAS,CAACE,CAAV,GAAc,EAAd;AACAF,IAAAA,SAAS,CAACG,CAAV,GAAc,GAAd;AAEAT,IAAAA,GAAG,CAACU,KAAJ,CAAUC,QAAV,CAAmBL,SAAnB;AAEA,UAAMM,KAAK,GAAG,IAAI,KAAKd,IAAL,CAAUe,SAAd,CAAwB;AAClCC,MAAAA,UAAU,EAAE,OADsB;AAElCC,MAAAA,QAAQ,EAAE,EAFwB;AAGlCC,MAAAA,SAAS,EAAE,QAHuB;AAIlCC,MAAAA,UAAU,EAAE,MAJsB;AAKlCC,MAAAA,IAAI,EAAE,CAAC,SAAD,EAAY,SAAZ,CAL4B;AAKJ;AAC9BC,MAAAA,MAAM,EAAE,SAN0B;AAOlCC,MAAAA,eAAe,EAAE,CAPiB;AAQlCC,MAAAA,UAAU,EAAE,IARsB;AASlCC,MAAAA,eAAe,EAAE,SATiB;AAUlCC,MAAAA,cAAc,EAAE,CAVkB;AAWlCC,MAAAA,eAAe,EAAEC,IAAI,CAACC,EAAL,GAAU,CAXO;AAYlCC,MAAAA,kBAAkB,EAAE,CAZc;AAalCC,MAAAA,QAAQ,EAAE,IAbwB;AAclCC,MAAAA,aAAa,EAAE;AAdmB,KAAxB,CAAd;AAiBA,UAAMC,QAAQ,GAAG,IAAI,KAAKhC,IAAL,CAAUS,IAAd,CAAmB,2DAAnB,EAAgFK,KAAhF,CAAjB;AACAkB,IAAAA,QAAQ,CAACtB,CAAT,GAAa,EAAb;AACAsB,IAAAA,QAAQ,CAACrB,CAAT,GAAa,GAAb;AAED;;AAUDf,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAGqC,IAAD,IAAU;AAAE,aAAK5B,MAAL,GAAc4B,IAAd;AAAmB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA/C2D","sourcesContent":["import textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class SphereSlider extends React.PureComponent {\n  componentDidMount() {\n    this.PIXI = require('pixi.js');\n    const app = new this.PIXI.Application({ backgroundColor: 0x1099bb });\n    this.canvas.appendChild(app.view);\n\n    const basicText = new this.PIXI.Text('Basic text in pixi');\n    basicText.x = 50;\n    basicText.y = 100;\n\n    app.stage.addChild(basicText);\n\n    const style = new this.PIXI.TextStyle({\n        fontFamily: 'Arial',\n        fontSize: 36,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n        fill: ['#ffffff', '#00ff99'], // gradient\n        stroke: '#4a1850',\n        strokeThickness: 5,\n        dropShadow: true,\n        dropShadowColor: '#000000',\n        dropShadowBlur: 4,\n        dropShadowAngle: Math.PI / 6,\n        dropShadowDistance: 6,\n        wordWrap: true,\n        wordWrapWidth: 440,\n    });\n\n    const richText = new this.PIXI.Text('Rich text with a lot of options and across multiple lines', style);\n    richText.x = 50;\n    richText.y = 250;\n\n  }\n\n  animate = () => {\n    this.material.needsUpdate = true;\n    requestAnimationFrame( this.animate );\n    // this.cube.rotation.x += 0.01;\n\t\t// this.cube.rotation.y += 0.01;\n    this.renderer.render( this.scene, this.camera );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}