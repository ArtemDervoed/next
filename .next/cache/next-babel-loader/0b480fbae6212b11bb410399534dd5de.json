{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/SphereSlider/SphereSlider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl';\nimport img1 from './1.jpg';\nimport img2 from './2.jpg'; // import PixiImage from './PixiImage';\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class SphereSlider extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleKeyDown\", e => {\n      if (e.key === 'ArrowUp') {\n        console.log('ArrowUp');\n      }\n\n      if (e.key === 'ArrowDown') {\n        console.log('ArrowDown');\n      }\n    });\n\n    _defineProperty(this, \"handleMouseMove\", e => {\n      this.mouse.x = e.clientX / window.innerWidth * 2 - 1;\n      this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    });\n\n    _defineProperty(this, \"animate\", () => {\n      requestAnimationFrame(this.animate);\n    });\n  }\n\n  componentDidMount() {\n    this.mouse = {\n      x: 0,\n      y: 0\n    };\n    this.PIXI = require('pixi.js');\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.app = new this.PIXI.Application({\n      width: this.width,\n      height: this.height,\n      transparent: true,\n      autoResize: true,\n      resizeTo: window,\n      resolution: 1\n    });\n    this.container = new PIXI.Container();\n    this.sprite = new PIXI.Sprite(PIXI.Texture.from(img1));\n    this.container.addChild(this.sprite);\n    this.canvas.appendChild(this.app.view);\n    this.app.stage.addChild(this.container);\n    window.addEventListener('mousemove', this.handleMouseMove);\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.animate();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      ref: node => {\n        this.canvas = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/msi/hello-next/components/SphereSlider/SphereSlider.js"],"names":["textFragment","textVertex","img1","img2","SphereSlider","React","PureComponent","e","key","console","log","mouse","x","clientX","window","innerWidth","y","clientY","innerHeight","requestAnimationFrame","animate","componentDidMount","PIXI","require","width","height","app","Application","transparent","autoResize","resizeTo","resolution","container","Container","sprite","Sprite","Texture","from","addChild","canvas","appendChild","view","stage","addEventListener","handleMouseMove","handleKeyDown","render","node"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CACA;AAEA;;AAEA,eAAe,MAAMC,YAAN,SAA2BC,KAAK,CAACC,aAAjC,CAA+C;AAAA;AAAA;;AAAA,2CAgC3CC,CAAD,IAAO;AACrB,UAAIA,CAAC,CAACC,GAAF,KAAU,SAAd,EAAyB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACD,UAAIH,CAAC,CAACC,GAAF,KAAU,WAAd,EAA2B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AAEF,KAxC2D;;AAAA,6CA0CzCH,CAAD,IAAO;AACvB,WAAKI,KAAL,CAAWC,CAAX,GAAiBL,CAAC,CAACM,OAAF,GAAYC,MAAM,CAACC,UAArB,GAAoC,CAApC,GAAwC,CAAvD;AACD,WAAKJ,KAAL,CAAWK,CAAX,GAAe,EAAIT,CAAC,CAACU,OAAF,GAAYH,MAAM,CAACI,WAAvB,IAAuC,CAAvC,GAA2C,CAA1D;AACA,KA7C2D;;AAAA,qCA+ClD,MAAM;AACdC,MAAAA,qBAAqB,CAAE,KAAKC,OAAP,CAArB;AACD,KAjD2D;AAAA;;AAC5DC,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,KAAL,GAAa;AACXC,MAAAA,CAAC,EAAE,CADQ;AAEXI,MAAAA,CAAC,EAAE;AAFQ,KAAb;AAIA,SAAKM,IAAL,GAAYC,OAAO,CAAC,SAAD,CAAnB;AACA,SAAKC,KAAL,GAAaV,MAAM,CAACC,UAApB;AACA,SAAKU,MAAL,GAAcX,MAAM,CAACI,WAArB;AACA,SAAKQ,GAAL,GAAW,IAAI,KAAKJ,IAAL,CAAUK,WAAd,CAA0B;AACnCH,MAAAA,KAAK,EAAE,KAAKA,KADuB;AAEnCC,MAAAA,MAAM,EAAE,KAAKA,MAFsB;AAGnCG,MAAAA,WAAW,EAAE,IAHsB;AAInCC,MAAAA,UAAU,EAAE,IAJuB;AAKnCC,MAAAA,QAAQ,EAAEhB,MALyB;AAMnCiB,MAAAA,UAAU,EAAE;AANuB,KAA1B,CAAX;AASA,SAAKC,SAAL,GAAiB,IAAIV,IAAI,CAACW,SAAT,EAAjB;AACA,SAAKC,MAAL,GAAc,IAAIZ,IAAI,CAACa,MAAT,CAAgBb,IAAI,CAACc,OAAL,CAAaC,IAAb,CAAkBnC,IAAlB,CAAhB,CAAd;AAEA,SAAK8B,SAAL,CAAeM,QAAf,CAAwB,KAAKJ,MAA7B;AAEA,SAAKK,MAAL,CAAYC,WAAZ,CAAwB,KAAKd,GAAL,CAASe,IAAjC;AAEA,SAAKf,GAAL,CAASgB,KAAT,CAAeJ,QAAf,CAAwB,KAAKN,SAA7B;AAEAlB,IAAAA,MAAM,CAAC6B,gBAAP,CAAwB,WAAxB,EAAqC,KAAKC,eAA1C;AACA9B,IAAAA,MAAM,CAAC6B,gBAAP,CAAwB,SAAxB,EAAmC,KAAKE,aAAxC;AACA,SAAKzB,OAAL;AACD;;AAqBD0B,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAGC,IAAD,IAAU;AAAE,aAAKR,MAAL,GAAcQ,IAAd;AAAmB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAvD2D","sourcesContent":["import textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\nimport img1 from './1.jpg';\nimport img2 from './2.jpg';\n// import PixiImage from './PixiImage';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class SphereSlider extends React.PureComponent {\n  componentDidMount() {\n    this.mouse = {\n      x: 0,\n      y: 0,\n    };\n    this.PIXI = require('pixi.js');\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.app = new this.PIXI.Application({\n      width: this.width,\n      height: this.height,\n      transparent: true,\n      autoResize: true,\n      resizeTo: window,\n      resolution: 1,\n    });\n\n    this.container = new PIXI.Container();\n    this.sprite = new PIXI.Sprite(PIXI.Texture.from(img1));\n\n    this.container.addChild(this.sprite);\n\n    this.canvas.appendChild(this.app.view);\n\n    this.app.stage.addChild(this.container);\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.animate();\n  }\n\n  handleKeyDown = (e) => {\n    if (e.key === 'ArrowUp') {\n      console.log('ArrowUp');      \n    }\n    if (e.key === 'ArrowDown') {\n      console.log('ArrowDown');\n    }\n    \n  }\n\n  handleMouseMove = (e) => {\n    this.mouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t  this.mouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  animate = () => {\n    requestAnimationFrame( this.animate );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}