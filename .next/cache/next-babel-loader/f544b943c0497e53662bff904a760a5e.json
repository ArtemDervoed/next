{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/msi/hello-next/components/Sphere/Sphere.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport textFragment from './fragment.glsl';\nimport textVertex from './vertex.glsl';\nimport * as THREE from 'three'; // import TRYGalien from './TRYGalien.woff2';\n\nvar Sphere =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Sphere, _React$PureComponent);\n\n  function Sphere() {\n    var _this;\n\n    _classCallCheck(this, Sphere);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sphere).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseMove\", function (e) {\n      _this.mouse.x = e.clientX / window.innerWidth * 2 - 1;\n      _this.mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function () {\n      requestAnimationFrame(_this.animate);\n    });\n\n    _this.mouse = {\n      x: 0,\n      y: 0\n    };\n    return _this;\n  }\n\n  _createClass(Sphere, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n      this.camera = new THREE.PerspectiveCamera(75, this.width / this.height, 0.1, 1000);\n      this.camera.position.set(2, -1.5, -1);\n      this.camera.lookAt(new THREE.Vector3()); // this.controls = new THREE.OrbitControls(this.camera, context.canvas);\n\n      this.scene = new THREE.Scene();\n      this.renderer.setSize(this.width, this.height);\n      this.canvas.appendChild(this.renderer.domElement);\n      var geometry = new THREE.BoxGeometry(1, 1, 1);\n      var material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      var cube = new THREE.Mesh(geometry, material);\n      this.scene.add(cube);\n      this.camera.position.z = 5;\n      window.addEventListener('mousemove', this.handleMouseMove);\n      this.animate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        ref: function ref(node) {\n          _this2.canvas = node;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Sphere;\n}(React.PureComponent);\n\nexport { Sphere as default };","map":{"version":3,"sources":["/Users/msi/hello-next/components/Sphere/Sphere.js"],"names":["textFragment","textVertex","THREE","Sphere","e","mouse","x","clientX","window","innerWidth","y","clientY","innerHeight","requestAnimationFrame","animate","width","height","renderer","WebGLRenderer","setClearColor","camera","PerspectiveCamera","position","set","lookAt","Vector3","scene","Scene","setSize","canvas","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","z","addEventListener","handleMouseMove","node","React","PureComponent"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;IAEqBC,M;;;;;AACnB,oBAAc;AAAA;;AAAA;;AACZ;;AADY,sEAqCI,UAACC,CAAD,EAAO;AACvB,YAAKC,KAAL,CAAWC,CAAX,GAAiBF,CAAC,CAACG,OAAF,GAAYC,MAAM,CAACC,UAArB,GAAoC,CAApC,GAAwC,CAAvD;AACD,YAAKJ,KAAL,CAAWK,CAAX,GAAe,EAAIN,CAAC,CAACO,OAAF,GAAYH,MAAM,CAACI,WAAvB,IAAuC,CAAvC,GAA2C,CAA1D;AACA,KAxCa;;AAAA,8DA0CJ,YAAM;AACdC,MAAAA,qBAAqB,CAAE,MAAKC,OAAP,CAArB;AACD,KA5Ca;;AAEZ,UAAKT,KAAL,GAAa;AACXC,MAAAA,CAAC,EAAE,CADQ;AAEXI,MAAAA,CAAC,EAAE;AAFQ,KAAb;AAFY;AAMb;;;;wCACmB;AAClB,WAAKK,KAAL,GAAaP,MAAM,CAACC,UAApB;AACA,WAAKO,MAAL,GAAcR,MAAM,CAACI,WAArB;AAEA,WAAKK,QAAL,GAAgB,IAAIf,KAAK,CAACgB,aAAV,EAAhB;AAEA,WAAKD,QAAL,CAAcE,aAAd,CAA4B,oBAA5B,EAAkD,CAAlD;AAGA,WAAKC,MAAL,GAAc,IAAIlB,KAAK,CAACmB,iBAAV,CAA6B,EAA7B,EAAiC,KAAKN,KAAL,GAAa,KAAKC,MAAnD,EAA2D,GAA3D,EAAgE,IAAhE,CAAd;AACA,WAAKI,MAAL,CAAYE,QAAZ,CAAqBC,GAArB,CAAyB,CAAzB,EAA4B,CAAC,GAA7B,EAAkC,CAAC,CAAnC;AAEA,WAAKH,MAAL,CAAYI,MAAZ,CAAmB,IAAItB,KAAK,CAACuB,OAAV,EAAnB,EAZkB,CAalB;;AAEA,WAAKC,KAAL,GAAa,IAAIxB,KAAK,CAACyB,KAAV,EAAb;AACA,WAAKV,QAAL,CAAcW,OAAd,CAAsB,KAAKb,KAA3B,EAAkC,KAAKC,MAAvC;AACA,WAAKa,MAAL,CAAYC,WAAZ,CAAwB,KAAKb,QAAL,CAAcc,UAAtC;AAEA,UAAIC,QAAQ,GAAG,IAAI9B,KAAK,CAAC+B,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,UAAIC,QAAQ,GAAG,IAAIhC,KAAK,CAACiC,iBAAV,CAA6B;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAA7B,CAAf;AACA,UAAIC,IAAI,GAAG,IAAInC,KAAK,CAACoC,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAX;AACA,WAAKR,KAAL,CAAWa,GAAX,CAAgBF,IAAhB;AAEA,WAAKjB,MAAL,CAAYE,QAAZ,CAAqBkB,CAArB,GAAyB,CAAzB;AAEAhC,MAAAA,MAAM,CAACiC,gBAAP,CAAwB,WAAxB,EAAqC,KAAKC,eAA1C;AACA,WAAK5B,OAAL;AACD;;;6BAWQ;AAAA;;AACP,aACE;AAAK,QAAA,GAAG,EAAE,aAAC6B,IAAD,EAAU;AAAE,UAAA,MAAI,CAACd,MAAL,GAAcc,IAAd;AAAmB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAnDiCC,KAAK,CAACC,a;;SAArB1C,M","sourcesContent":["import textFragment from './fragment.glsl'\nimport textVertex from './vertex.glsl';\n\nimport * as THREE from 'three';\n\n// import TRYGalien from './TRYGalien.woff2';\n\nexport default class Sphere extends React.PureComponent {\n  constructor() {\n    super();\n    this.mouse = {\n      x: 0,\n      y: 0,\n    }\n  }\n  componentDidMount() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n\n    this.renderer = new THREE.WebGLRenderer();\n\n    this.renderer.setClearColor('hsl(100, 10%, 10%)', 1);\n\n\n    this.camera = new THREE.PerspectiveCamera( 75, this.width / this.height, 0.1, 1000 );\n    this.camera.position.set(2, -1.5, -1);\n\n    this.camera.lookAt(new THREE.Vector3());\n    // this.controls = new THREE.OrbitControls(this.camera, context.canvas);\n\n    this.scene = new THREE.Scene();\n    this.renderer.setSize(this.width, this.height);\n    this.canvas.appendChild(this.renderer.domElement)\n\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n    var cube = new THREE.Mesh( geometry, material );\n    this.scene.add( cube );\n\n    this.camera.position.z = 5;\n\n    window.addEventListener('mousemove', this.handleMouseMove);\n    this.animate();\n  }\n\n  handleMouseMove = (e) => {\n    this.mouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\t  this.mouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  animate = () => {\n    requestAnimationFrame( this.animate );\n  }\n  \n  render() {\n    return (\n      <div ref={(node) => { this.canvas = node}} />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}